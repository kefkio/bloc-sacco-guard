/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LoanManager,
  LoanManagerInterface,
} from "../../../contracts/core/LoanManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Applied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Disbursed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Repaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createLoan",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "disburse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "disbursed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "repaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestLoan",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100bb57601f6109db38819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361090490816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163371fd8e61461070d5750806361b8ce8c146106ee578063715018a6146106915780638d5d3429146105ae5780638da5cb5b14610586578063b759f954146104a8578063bd77ac2c146102f9578063e1ec3c6814610296578063e75da5981461011a5763f2fde38b1461009157600080fd5b34610116576020366003190112610116576100aa6107f5565b906100b36108a2565b6001600160a01b0391821692831561010057505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b508290346102925782600319360112610292576101356107f5565b90602435916101426108a2565b6001600160a01b0390811691821561025c575060209483927f3ad93af63cb7967b23e4fb500b7d7d28b07516325dcf341f88bebf959d82c1cb9261018888961515610810565b7f77813f331a0748806a13ce2604421e1b5fbfbbc9d1f20751a8f218e3608965e760015496879687936101ba85610847565b60015560038b61024a6101cb61086c565b93898552868501908682528b8601916001835260608701918583528d60808901968088528d815260028c52209751166bffffffffffffffffffffffff60a01b8854161787555160018701556102336002870192511515839060ff801983541691151516179055565b51815461ff00191690151560081b61ff0016179055565b519101558551908152a3519380a28152f35b606490602087519162461bcd60e51b8352820152601060248201526f34b73b30b634b2103137b93937bbb2b960811b6044820152fd5b5080fd5b50346101165760203660031901126101165760a09282913581526002602052209060ff600180851b038354169260018101549260036002830154920154938151958652602086015282821615159085015260081c16151560608301526080820152f35b509034610116576020806003193601126104a4578235916103186108a2565b8285526002825280852060028101805460ff8116156104725760ff8160081c1661043b576101009061ff00191617905560018060a01b0390818154169587808080600186019a8b54905af13d156104365767ffffffffffffffff3d81811161042357865191601f8201601f19908116603f0116830190811183821017610410578752815289873d92013e5b156103db5750907f8c4905f8a17a430223b23d54ea01f7ebb8c6cc6417d7eae96dfa0010949f0fa0939291541694549051908152a380f35b835162461bcd60e51b8152908101859052600f60248201526e191a5cd89d5c9cd94819985a5b1959608a1b6044820152606490fd5b634e487b7160e01b8c526041855260248cfd5b634e487b7160e01b8b526041845260248bfd5b6103a3565b835162461bcd60e51b81528088018690526011602482015270185b1c9958591e48191a5cd89d5c9cd959607a1b6044820152606490fd5b835162461bcd60e51b8152808801869052600c60248201526b1b9bdd08185c1c1c9bdd995960a21b6044820152606490fd5b8380fd5b5034610116576020366003190112610116578035916104c56108a2565b828452600260205280842080546001600160a01b031615610557576002019182549160ff831661052157505060ff191660011790557f3ad93af63cb7967b23e4fb500b7d7d28b07516325dcf341f88bebf959d82c1cb8280a280f35b906020606492519162461bcd60e51b8352820152601060248201526f185b1c9958591e48185c1c1c9bdd995960821b6044820152fd5b815162461bcd60e51b815260208185015260096024820152681b9bdd08199bdd5b9960ba1b6044820152606490fd5b505034610292578160031936011261029257905490516001600160a01b039091168152602090f35b5091903461029257602036600319011261029257602092356105d1811515610810565b600154926105de84610847565b60015560036105eb61086c565b9133835261065c8784018581528685019083825260608601908482528860808801958087528b815260028d52209660018060a01b039051166bffffffffffffffffffffffff60a01b8854161787555160018701556102336002870192511515839060ff801983541691151516179055565b519101558151908152827f77813f331a0748806a13ce2604421e1b5fbfbbc9d1f20751a8f218e3608965e7853393a351908152f35b83346106eb57806003193601126106eb576106aa6108a2565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102925781600319360112610292576020906001549051908152f35b9291905060203660031901126104a45780359283855260026020528285209060ff600283015460081c16156107c4575034156107965760030180549134830180931161078357505551903482527fd7e0ec76b1d4528064c83f86d869783dfd06db26b2b5624bde17d4b99f80dd9760203393a380f35b634e487b7160e01b865260119052602485fd5b506020606492519162461bcd60e51b835282015260086024820152676e6f2076616c756560c01b6044820152fd5b62461bcd60e51b8152602083820152600d60248201526c1b9bdd08191a5cd89d5c9cd959609a1b6044820152606490fd5b600435906001600160a01b038216820361080b57565b600080fd5b1561081757565b60405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b6044820152606490fd5b60001981146108565760010190565b634e487b7160e01b600052601160045260246000fd5b6040519060a0820182811067ffffffffffffffff82111761088c57604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036108b657565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220e6823b82f7f6e679d2ef1acea1b9dc22944b9df9353f2cf8466185522e4c87ac64736f6c63430008180033";

type LoanManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoanManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoanManager__factory extends ContractFactory {
  constructor(...args: LoanManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      LoanManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LoanManager__factory {
    return super.connect(runner) as LoanManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoanManagerInterface {
    return new Interface(_abi) as LoanManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LoanManager {
    return new Contract(address, _abi, runner) as unknown as LoanManager;
  }
}
